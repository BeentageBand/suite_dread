/*=====================================================================================*/
/**
 * api.h
 * author : puch
 * date : Oct 22 2015
 *
 * description : Any comments
 *
 */
/*=====================================================================================*/
#ifndef DREAD_H_
#define DREAD_H_
/*=====================================================================================*
 * Project Includes
 *=====================================================================================*/
#include "dread_events.h"
#include "dread_threads.h"
#include "dread_pk.h"
/*=====================================================================================* 
 * Standard Includes
 *=====================================================================================*/
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
/*=====================================================================================* 
 * Exported X-Macros
 *=====================================================================================*/
namespace dread{
/*=====================================================================================* 
 * Exported Define Macros
 *=====================================================================================*/

/*=====================================================================================* 
 * Exported Type Declarations
 *=====================================================================================*/
void Send(const int app_id, const int thread_id, const uint32_t event, std::stringstream & data);
void Send(Packet const & packet);
void Publish(const uint32_t event, std::stringstream & data );
void Publish(Packet const & packet);

const Packet * Receive_Packet(void);
const Packet * Receive_Packet_Timeout(uint32_t tout);
const Packet * Receive_Packet_Only(std::vector<uint32_t> const & event_list);
const Packet * Receive_Packet_Only_Timeout(std::vector<uint32_t> const & event_list, uint32_t tout);

bool Subscribe(std::vector<uint32_t> const & event_list);
bool Unsubscribe(std::vector<uint32_t> const & event_list);
/*=====================================================================================* 
 * Exported Object Declarations
 *=====================================================================================*/

/*=====================================================================================* 
 * Exported Function Prototypes
 *=====================================================================================*/

/*=====================================================================================* 
 * Exported Function Like Macros
 *=====================================================================================*/

/*=====================================================================================* 
 * api.h
 *=====================================================================================*
 * Log History
 *
 *=====================================================================================*/
} /*namespace dread*/
#endif /*DREAD_H_*/

